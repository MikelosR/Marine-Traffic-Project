# Docker Compose will set up your services (PostgreSQL, Kafka, Zookeeper).

services:
  #PostgreSQL Database
  postgres:
    image: "postgres:latest"
    container_name: seax-postgres
    environment:
      - "POSTGRES_DB=seax_db"
      - "POSTGRES_PASSWORD=secret"
      - "POSTGRES_USER=seax_user"
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - seax-network

  #Zookeeper (needed for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: seax-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - seax-network
    healthcheck:
      test: ["CMD-SHELL", "zkServer.sh status | grep -q 'Mode:'"]
      interval: 10s
      timeout: 10s
      retries: 5

  #Kafka Message Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: seax-kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - seax-network
    healthcheck:
      test:
        ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  #Spring Boot Backend - Development Mode
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: seax-backend
    ports:
      - "8080:8080"
      # - "5005:5005"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/seax_db
      - SPRING_DATASOURCE_USERNAME=seax_user
      - SPRING_DATASOURCE_PASSWORD=secret
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      #      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005

      - SPRING_PROFILES_ACTIVE=dev

    networks:
      - seax-network
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src
      - ./pom.xml:/app/pom.xml
      # Mount Maven cache to speed up builds
      - maven_cache:/root/.m2
    restart: unless-stopped

  #React Frontend
  frontend:
    build:
      context: ../front
      dockerfile: Dockerfile
    container_name: seax-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - seax-network
    volumes:
      # Mount source code for hot reload (React already supports this)
      - ../front/src:/app/src
      - ../front/public:/app/public

volumes:
  postgres_data:
  maven_cache: # Cache Maven dependencies

networks:
  seax-network:
    driver: bridge